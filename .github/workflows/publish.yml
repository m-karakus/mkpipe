name: Build and Push Package

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-push-pypi:
    name: Build PyPI Package and Push
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install build twine

      - name: Update version in setup.py
        id: update_version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG#v}
          sed -i "s/version='.*'/version='$VERSION'/" setup.py
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add setup.py
          git commit -m "Update version to $VERSION"
          git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload dist/*

  build-and-push-docker:
    name: Docker Image Build and Push
    runs-on: ubuntu-latest
    needs: [build-and-push-pypi]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run Custom Docker Build Script
        run: ./make-docker-container.sh
        shell: bash
        working-directory: ./deploy/docker

      - name: Tag Docker Image
        run: |
          REPO_NAME=$(basename ${{ github.repository }})
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/$REPO_NAME
          BRANCH_NAME=${{ github.head_ref || github.ref_name }}
          TAG_NAME=$(echo $BRANCH_NAME | sed 's/[^a-zA-Z0-9._-]/-/g')
          docker tag dbeaver/cloudbeaver:dev $IMAGE_NAME:$TAG_NAME
          echo "image=$IMAGE_NAME:$TAG_NAME" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Push Docker Image
        run: docker push ${{ env.image }}
